name: CI/CD Spring Boot

on:
  push:
    branches:
      - main
  # Manual releases via git tags
  create:
    tags:
      - 'v*.*.*'

env:
  MAVEN_REPO_ID: github
  MAVEN_REPO_URL: https://maven.pkg.github.com/learnwithprayag/springboot-demo

jobs:
  ci-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>${{ env.MAVEN_REPO_ID }}</id>
                <username>learnwithprayag</username>
                <password>${{ secrets.MAVEN_DEPLOY_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Set timestamp version
        id: timestamp
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          echo "timestamp_version=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Set Maven version dynamically
        run: mvn versions:set -DnewVersion=${{ steps.timestamp.outputs.timestamp_version }} -DgenerateBackupPoms=false

      - name: Build JAR
        run: mvn clean package

      - name: Rename JAR for Docker
        run: mv target/springboot-demo-*.jar target/app.jar

      - name: Deploy to GitHub Packages
        run: mvn deploy -s ~/.m2/settings.xml

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u learnwithprayag --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/learnwithprayag/springboot-demo:${GITHUB_SHA::7} \
                       -t ghcr.io/learnwithprayag/springboot-demo:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/learnwithprayag/springboot-demo:${GITHUB_SHA::7}
          docker push ghcr.io/learnwithprayag/springboot-demo:latest

  release-build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>${{ env.MAVEN_REPO_ID }}</id>
                <username>learnwithprayag</username>
                <password>${{ secrets.MAVEN_DEPLOY_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Set Maven version from Git tag
        run: |
          TAG_VERSION=${GITHUB_REF/refs\/tags\//}
          mvn versions:set -DnewVersion=$TAG_VERSION -DgenerateBackupPoms=false

      - name: Build JAR
        run: mvn clean package

      - name: Rename JAR for Docker
        run: mv target/springboot-demo-*.jar target/app.jar

      - name: Deploy to GitHub Packages
        run: mvn deploy -s ~/.m2/settings.xml

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u learnwithprayag --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/learnwithprayag/springboot-demo:$TAG_VERSION \
                       -t ghcr.io/learnwithprayag/springboot-demo:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/learnwithprayag/springboot-demo:$TAG_VERSION
          docker push ghcr.io/learnwithprayag/springboot-demo:latest
